<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSubScrChangeBG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>offset = 160;
state = 0;
with (oSS_Fg) hidetext = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0) {
    if (offset &gt; 0) {
        offset -= 16;
    } else {
        state = 1;
        view_object[0] = noone;
        view_yview[0] = 0;
    }
}
if (state == 1) {
    if (oControl.kUp &gt; 0 &amp;&amp; oControl.kUpPushedSteps == 0) {
        global.ssmode = 0;
        event_user(0);
    }
    if (oControl.kRight &gt; 0 &amp;&amp; oControl.kRightPushedSteps == 0) {
        global.ssmode = 1;
        event_user(0);
    }
    if (oControl.kLeft &gt; 0 &amp;&amp; oControl.kLeftPushedSteps == 0) {
        global.ssmode = 2;
        event_user(0);
    }
    if (oControl.kDown &gt; 0 &amp;&amp; oControl.kDownPushedSteps == 0) {
        global.ssmode = 3;
        event_user(0);
    }
}
if (state == 2) {
    if (offset &lt; 160) {
        offset += 16;
    } else event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (oSS_Control) {
    event_user(0);
    event_user(1);
}
state = 2;
with (oSS_Fg) hidetext = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// equips
draw_sprite_ext(sprite_index, -1, view_xview[0] + 160 + offset, view_yview[0] + 120, 1, 1, 0, -1, 1);
draw_background(bg_SubScrMenuEqu, view_xview[0] + 196 + offset, view_yview[0] + 103);
// logs
draw_sprite_ext(sprite_index, -1, view_xview[0] + 160 - offset, view_yview[0] + 120, 1, 1, 180, -1, 1);
draw_background(bg_SubScrMenuLog, view_xview[0] + 90 - offset, view_yview[0] + 103);
// map
draw_sprite_ext(sprite_index, -1, view_xview[0] + 160, view_yview[0] + 120 - offset, 1, 1, 90, -1, 1);
draw_background(bg_SubScrMenuMap, view_xview[0] + 143, view_yview[0] + 50 - offset);
// options
draw_sprite_ext(sprite_index, -1, view_xview[0] + 160, view_yview[0] + 120 + offset, 1, 1, 270, -1, 1);
draw_background(bg_SubScrMenuOpt, view_xview[0] + 143, view_yview[0] + 156 + offset);
// widescreen fix for screen edges
if (oControl.widescreen) {
    draw_set_alpha(1);
    draw_set_color(c_black);
    draw_rectangle(view_xview[0] + 320 + offset, view_yview[0], view_xview[0] + 320 + (oControl.widescreen_space/2), view_yview[0] + 240, false);
    draw_rectangle(view_xview[0] - (oControl.widescreen_space/2), view_yview[0], view_xview[0] + (oControl.widescreen_space/2) - offset, view_yview[0] + 240, false);
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
