<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAutoadP</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VITAL INFORMATION: MY NAME IS SKIPPY
makeActive();
setCollisionBounds(-10, -14, 14, 14);
myhealth = 300;
damage = 16;
stuntime = 4;
hpush = 6;
vpush = -3;
hitmissileexpl = 0;
hitsound = sndRobotHit1;
deathsound = sndRobotExpl;
canfreeze = 0;
platyoffset = -6;
frozenspr = sAutoad;
flipx = 0;
target = 0;
state = 2;
clawangle = 0;
clawx = -9;
clawy = -1;
fangy = 8;
stun = 0;
flashing = 0;
charge = 0;
yoff = 0;
platform = -4;
statetime = 0;
fxtimer = 0;
hasmissile = 0;
clawstate = 0;
clawoffset = 0;
if (global.event[160] == 0) {
    text1 = "Controls";
    text1 = get_text("Buttons", "Controls");
    text2 = "Hold | - Jump / | - Grab";
    text2 = get_text("InGameHints", "Autoad_Text");
    btn1_name = "Jump";
    //btn1_name = get_text("Buttons", "Jump");
    btn2_name = "Fire";
    //btn2_name = get_text("Buttons", "Fire");
    duration = 500;
    make_notification(text1, text2, duration, btn1_name, btn2_name);
    global.event[160] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 2) {
    if (oCharacter.y - 20 &gt; y) yVel = -3;
    if (oCharacter.y - 20 &lt; y) yVel = -5;
    if (oCharacter.x &gt; x) xVel = 2;
    if (oCharacter.x &lt; x) xVel = -2;
    clawangle = 36;
}
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state != 100) {
    if ((state == 1 || state == 2) &amp;&amp; oControl.kJump) {
        if (charge &lt; 4) charge += 0.12;
    }
    if (state == 1) {
        if (charge &gt; 0 &amp;&amp; !oControl.kJump) {
            yVel = -2 - charge;
            if (oControl.kLeft &gt; 0) xVel = -2;
            if (oControl.kRight &gt; 0) xVel = 2;
            clawangle = 36;
            state = 2;
            charge = 0;
            sfx_play(sndAutoadJump);
        }
        if (!isCollisionBottom(1)) state = 2;
    }
    if (state == 2) {
        yVel += 0.25;
        if (clawangle &gt; 0) clawangle -= 2;
        if (isCollisionBottom(1) &amp;&amp; yVel &gt; 0) {
            xVel = 0;
            yVel = 0;
            clawangle = -30;
            state = 1;
        }
        if (!oControl.kJump) charge = 0;
    }
    if (charge &gt;= 0 &amp;&amp; charge &lt; 1) yoff = 0;
    if (charge &gt;= 1 &amp;&amp; charge &lt; 2.5) yoff = 1;
    if (charge &gt;= 2.5 &amp;&amp; charge &lt; 4) yoff = 2;
    if (charge &gt;= 4) yoff = 3;
    if (oControl.kFire &amp;&amp; oControl.kFirePushedSteps == 0 &amp;&amp; clawstate == 0) {
        if (hasmissile == 0) {
            clawstate = 1;
            sfx_play(sndA2WJValve);
        }
        if (hasmissile == 1) event_user(1);
    }
    moveTo(xVel, yVel);
    if (y &gt; 480) state = 100;
} // if (state != 100)
if (state == 100) {
    expl = instance_create(x, y, oFXAnimSpark);
    expl.image_speed = 0.5;
    expl.additive = 0;
    expl.sprite_index = sExpl1;
    repeat (5) {
        expl = instance_create(x - 20 + random(40), y - 20 + random(40), oFXAnimSpark);
        expl.image_speed = 0.4 + random(0.4);
        expl.additive = 0;
        expl.sprite_index = sExpl1;
    }
    repeat (20) instance_create(x, y, oDebris);
    if (hasmissile) event_user(1);
    PlaySoundMono(deathsound);
    instance_destroy();
}
if (clawstate == 0) clawoffset = 0;
if (clawstate == 1) {
    if (clawoffset &lt; 10) {
        clawoffset += 1;
    } else clawstate = 2;
}
if (clawstate == 2) {
    if (clawoffset &gt; 0) {
        clawoffset -= 0.5;
    } else clawstate = 0;
    if (x &gt; 832 &amp;&amp; y == 146) hasmissile = 1;
}
if (stun == 0) statetime += 1;
if (fxtimer &lt; 5) {
    fxtimer += 1;
} else fxtimer = 0;
if (stun &gt; 0) stun -= 1;
if (flashing &gt; 0) flashing -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMissileExpl">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stun == 0) {
    myhealth -= other.damage * 5;
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oA3Slasher">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stun == 0) {
    myhealth -= other.damage * 2;
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oA3Stomper">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stun == 0 &amp;&amp; other.image_index &lt; 13) {
    myhealth -= other.damage;
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>msl = instance_create(x, y + 4, oAutoadMissile);
msl.hspeed = xVel * 0.25 + (oControl.kLeft &gt; 0) * -1 + (oControl.kRight &gt; 0) * 1;
msl.vspeed = min(-1.5, yVel * 0.8);
hasmissile = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun = stuntime;
flashing = 5;
fxtimer = 0;
PlaySoundMono(hitsound);
if (random(2) &lt; 0.2) instance_create(x, y, oDebris);
if (myhealth &lt;= 0) {
    state = 100;
    statetime = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fangy = 8 + clawoffset;
if (!flashing) {
    draw_sprite_ext(sAutoadPFang, -1, x, y + fangy, image_xscale, 1, image_angle, -1, image_alpha);
    draw_sprite_ext(sAutoadPClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, -1, image_alpha);
    draw_sprite_ext(sAutoadPClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, -1, image_alpha);
    draw_sprite_ext(sprite_index, -1, x, y + yoff, image_xscale, 1, image_angle, -1, image_alpha);
}
if (flashing) {
    draw_sprite_ext(sAutoadPFang, -1, x, y + fangy, image_xscale, 1, image_angle, make_color_rgb(80, 80, 80), image_alpha);
    draw_sprite_ext(sAutoadPClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, make_color_rgb(80, 80, 80), image_alpha);
    draw_sprite_ext(sAutoadPClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, make_color_rgb(80, 80, 80), image_alpha);
    draw_sprite_ext(sprite_index, -1, x, y + yoff, image_xscale, 1, image_angle, make_color_rgb(80, 80, 80), image_alpha);
    draw_set_blend_mode(bm_add);
    repeat (3) draw_sprite_ext(sAutoadPFang, -1, x, y + fangy, image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
    draw_sprite_ext(sAutoadPClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, -1, 1 - fxtimer * 0.25);
    draw_sprite_ext(sAutoadPClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, -1, 1 - fxtimer * 0.25);
    draw_sprite_ext(sprite_index, -1, x, y + yoff, image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);
}
if (hasmissile) draw_sprite(sSMissile, 0, x + 2, y + 10 + clawoffset);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
