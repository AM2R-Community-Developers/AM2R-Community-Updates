<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMGammaMutate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
state = 0;
statetime = 0;
xoffset = 0;
yoffset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0) {
    if (statetime == 120) {
        state = 1;
        statetime = 0;
    }
}
if (state == 1) {
    if (statetime == 5) sfx_play(sndMGammaMorph);
    if (image_index &lt; 4) image_index += 0.1;
    if (statetime == 45) {
        state = 2;
        statetime = 0;
    }
}
if (state == 2) {
    if (image_index &lt; 12) image_index += 0.1;
    xoffset = round(random(2));
    yoffset = round(random(2));
    if (statetime == 10) {
        bld = instance_create(x - 10, y - 12, oFXAnimSpark);
        bld.sprite_index = sMGammaBlood1;
        bld.image_speed = 0.5;
        bld.image_alpha = 0.6;
    }
    if (statetime == 40) {
        bld = instance_create(x + 8, y - 1, oFXAnimSpark);
        bld.sprite_index = sMGammaBlood1;
        bld.image_speed = 0.5;
        bld.image_alpha = 0.6;
        bld.image_angle = 180;
    }
    if (statetime == 60) {
        bld = instance_create(x - 16, y - 2, oFXAnimSpark);
        bld.sprite_index = sMGammaBlood1;
        bld.image_speed = 0.5;
        bld.image_alpha = 0.6;
        bld.image_angle = 90;
    }
    if (statetime == 80) {
        state = 3;
        statetime = 0;
    }
} // if (state == 2)
if (state == 3) {
    if (statetime == 10) sfx_play(sndMGammaEyes);
    xoffset = 0;
    yoffset = 0;
    if (image_index &lt; 25) image_index += 0.25;
    if (statetime == 90) {
        create_gamma(x, y, 12, 1);
        with (oEventCamera2) alarm[0] = 1;
        instance_destroy();
    }
}
statetime += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(oControl.mod_fusion == 1 || oControl.MonsterPalettesFusionOnly == 0) {
    pal_swap_set(oControl.GammaPalette, 1, false);
}

alpha2 = image_index - floor(image_index);
alpha1 = 1 - alpha2;
if (state == 2) {
    draw_sprite_ext(sprite_index, image_index, x + xoffset, y + yoffset, 1, 1, 0, -1, alpha1 * 1.5);
    draw_sprite_ext(sprite_index, image_index + 1, x + xoffset, y + yoffset, 1, 1, 0, -1, alpha2 * 1.5);
} else draw_sprite_ext(sprite_index, image_index, x + xoffset, y + yoffset, 1, 1, 0, -1, 1);

shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
