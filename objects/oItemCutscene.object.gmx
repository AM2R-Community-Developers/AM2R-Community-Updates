<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMslSpark</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>opset = 0;
ealpha = 0;
fadeout = 0;
active = 0;
size = 0;

if(instance_exists(oNotification)) oNotification.visible = false //added
Mute_Loops();
if (global.itemtype == 0) {
    alarm[0] = 360;
    if(oMusicV2.bossbgm == sndJump) {
        mus_pause(oMusicV2.currentbgm);
    }
    else {
        mus_pause(oMusicV2.bossbgm);
    }
    mus_play_once(musItemGet);
} else {
    alarm[0] = 60;
    sfx_play(sndMessage);
}

if (oControl.widescreen) {
    surf = oControl.widescreen_surface;
    surfoff = 53;
} else {
    surf = oControl.screen_surface;
    surfoff = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active &amp;&amp; global.itemtype == 0 &amp;&amp; (oControl.kStart &amp;&amp; oControl.kStartPushedSteps == 0 || oControl.kJump &amp;&amp; oControl.kJumpPushedSteps == 0 || oControl.kFire &amp;&amp; oControl.kFirePushedSteps == 0)) event_user(0);
if (ealpha &lt; 1 &amp;&amp; fadeout == 0) ealpha += 0.05;
if (ealpha &gt; 0 &amp;&amp; fadeout) ealpha -= 0.05;
if (ealpha &gt;= 1 &amp;&amp; fadeout == 0) active = 1;
if (ealpha &lt;= 0 &amp;&amp; fadeout) {
    global.ingame = 1;
    global.transitiontype = 3;
    room_goto(global.currentroom);
}
size = ealpha * 24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeout = 1;
active = 0;
if (global.itemtype == 0) {
    if (sfx_isplaying(musItemGet)) audio_sound_gain(musItemGet, 0, 250);//mus_stop(musItemGet);
    oMusicV2.alarm[11] = 60;
    if(oMusicV2.bossbgm == sndJump) {
        mus_resume(oMusicV2.currentbgm);
        mus_current_fadein();
    }
    else {
        mus_resume(oMusicV2.bossbgm);
        mus_boss_fadein();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(oNotification)) oNotification.visible = true; //added
Unmute_Loops();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf)) {
    draw_surface(surf, 0 - surfoff, 0);
    if (global.itemtype == 0) {
        draw_surface_ext(surf, 1 - surfoff, 0, 1, 1, 0, -1, 0.5 * ealpha);
        draw_surface_ext(surf, -1 - surfoff, 0, 1, 1, 0, -1, 0.5 * ealpha);
        draw_surface_ext(surf, 2 - surfoff, 0, 1, 1, 0, -1, 0.2 * ealpha);
        draw_surface_ext(surf, -2 - surfoff, 0, 1, 1, 0, -1, 0.2 * ealpha);
    }
}
if (global.itemtype == 0) {
    draw_set_alpha(0.8);
    draw_set_color(c_black);
    draw_rectangle(0 - surfoff, 120 - size, room_width + surfoff, 120 + size, false);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fontGUI);
    draw_cool_text(160, 112 + oControl.GUIOffset, global.itmtext1, c_white, c_aqua, c_navy, ealpha);
    draw_set_valign(fa_top);
    if (global.btn1_name == "" &amp;&amp; global.btn2_name == "") {
        draw_set_font(fontMenuSmall2);
        draw_set_alpha(ealpha);
        draw_text(160, 121, global.itmtext2);
    }
    if (global.btn1_name != "" &amp;&amp; global.btn2_name == "") draw_txt_1button(160, 121, global.itmtext2, 0, global.btn1_name, ealpha);
    if (global.btn1_name != "" &amp;&amp; global.btn2_name != "") draw_txt_2buttons(160, 121, global.itmtext2, 0, global.btn1_name, global.btn2_name, ealpha);
    draw_set_halign(fa_left);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
