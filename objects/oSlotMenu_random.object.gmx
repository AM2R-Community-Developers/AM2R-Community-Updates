<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSaveSlotB</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.curropt = 0;
lastitem = 2;
active = 0;
alarm[0] = 5;
h = 0;
targeth = 33;
fadein = 1;
fadeout = 0;
d0str = get_text("Title-Additions", "GameSlot_NewGame_ClassicMode");
d1str = get_text("Title-Additions", "GameSlot_NewGame_SplitRandom");
d2str = get_text("Title-Additions", "GameSlot_NewGame_AM2Random");
if (global.saveslot == 0) {
    x = 270;
    y = 60;
}
if (global.saveslot == 1) {
    x = 270;
    y = 104;
}
if (global.saveslot == 2) {
    x = 270;
    y = 148;
}
draw_set_font(fontGUI2);
w = max(string_width(d0str), string_width(d1str)) + 10;


if (oControl.mod_insanitymode) {
    mycolor = make_color_rgb(187, 3, 3);
} else {
    mycolor = make_color_rgb(3, 187, 25);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active) {
    if (oControl.kDown &amp;&amp; oControl.kDownPushedSteps == 0) {
        global.curropt += 1;
        if (global.curropt &gt; lastitem) global.curropt = 0;
        sfx_play(sndMenuMove);
    }
    if (oControl.kUp &amp;&amp; oControl.kUpPushedSteps == 0) {
        global.curropt -= 1;
        if (global.curropt &lt; 0) global.curropt = lastitem;
        sfx_play(sndMenuMove);
    }
    if (oControl.kMenu1 &amp;&amp; oControl.kMenu1PushedSteps == 0) {
        sfx_play(sndMenuSel);        
        //active = 0;
        if (global.curropt == 0 ) { global.gamemode = 3; }
        if (global.curropt == 1 ) { global.gamemode = 5; }
        if (global.curropt == 2 ) { global.gamemode = 4; }
        if (instance_exists(op[0])) with (op[0]) instance_destroy();
        if (instance_exists(op[1])) with (op[1]) instance_destroy();
        if (instance_exists(op[2])) with (op[2]) instance_destroy();
        if (global.curropt == 0) instance_create(0, 0, oSlotMenu_classic);
        else if (global.mod_fusion_unlocked == 1) { instance_create(0, 0, oSlotMenu_Fusion); }
        else { instance_create(0, 0, oSlotMenu2); }
        instance_destroy();
        
        //global.difficulty = global.curropt;
        //global.newgame = 1;
        //mus_fadeout(musTitle);
        //room_change(14, 0);
    }
    if (oControl.kMenu2 &amp;&amp; oControl.kMenu2PushedSteps == 0) {
        global.curropt = 10;
        sfx_play(sndMenuCancel);
        event_user(1);
    }
}
if (fadein) {
    if (h &lt; targeth - 4) {
        h += 4;
    } else {
        h = targeth;
        fadein = 0;
        active = 1;
        event_user(0);
    }
}
if (fadeout) {
    if (h &gt; 4) {
        h -= 4;
    } else {
        if (global.curropt == 10) {
            with (oGameSelMenu) alarm[0] = 5;
            global.curropt = global.saveslot;
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(op[0])) with (op[0]) instance_destroy();
if (instance_exists(op[1])) with (op[1]) instance_destroy();
if (instance_exists(op[2])) with (op[2]) instance_destroy();
fadeout = 1;
active = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsep = 10;
op[0] = instance_create(x - 4, y + 3, oNormalOptionR);
op[0].optionid = 0;
op[0].label = d0str;
op[1] = instance_create(x - 4, y + 3 + vsep, oNormalOptionR);
op[1].optionid = 1;
op[1].label = d1str;
op[2] = instance_create(x - 4, y + 3 + vsep * 2, oNormalOptionR);
op[2].optionid = 2;
op[2].label = d2str;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(0.8);
draw_rectangle(x, y, x - w, y + h + 1, false);
draw_set_alpha(1);
draw_line(x, y, x, y + h);
draw_background_ext(bgSaveSlotLine2, x - w - 4, y, 1, h + 2, 0, mycolor, 1);
draw_background_ext(bgSaveSlotLine1, x - w, y + h + 0, w + 1, 1, 0, mycolor, 1);
if (oControl.mod_usemanualseed) {
    draw_set_halign(fa_right);
    draw_set_color(c_white);
    draw_set_font(fontGUI2);
    draw_cool_text(x, y - 30, get_text("GameplayMenu", "CustomSeed") + ": " + string(oControl.mod_seed), c_black, c_white, c_silver, h/targeth);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
