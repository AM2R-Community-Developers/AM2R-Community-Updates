<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sYumbo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
makeActive();
setCollisionBounds(-4, -4, 4, 0);
myhealth = 5;
damage = 2;
hitsound = sndEHit1;
deathsound = sndEDeath2;
platyoffset = -4;
frozenspr = sYumboFrozen;
target = 0;
canattack = 1;
freezetime = 400;
state = 1;
alarm[0] = 60 + random(120);
alarm[1] = 90 + random(120);
alarm[3] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 5;
if (state == 4 &amp;&amp; frozen == 0) {
    spark = instance_create(x+(2*facing), y-1, oFXTrail);
    spark.sprite_index = sYumboSpark;
    spark.additive = 1;
    spark.image_alpha = 1;
    spark.fadespeed = 0.1;
    spark.image_xscale = facing;
    spark.depth = -5;
    spark.hspeed = xVel / 2;
    spark.image_speed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 4) state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 60 + random(120);
if (frozen == 0) {
    if (state == 3) {
        state = 4;
    }
    if (state == 1 &amp;&amp; target == 1 &amp;&amp; global.difficulty == 2) state = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 60 + random(320);
if (state == 1 &amp;&amp; frozen == 0) {
    facing = -facing;
    state = 2;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
enemy_active_check(20);
enemy_target_check(180, 0);
if (frozen == 0) {
    if (active == 1) {
        if (state == 1) {
            xVel = 1 * facing;
            yVel = 0;
            image_angle = 0;
            if (isCollisionRight(2) &amp;&amp; facing == 1) {
                facing = -1;
                state = 2;
                image_index = 0;
            }
            if (isCollisionLeft(2) &amp;&amp; facing == -1) {
                facing = 1;
                state = 2;
                image_index = 0;
            }
        }
        if (state == 2) xVel *= 0.7;
        if (state == 3) {
            xVel *= 0.9;
            image_angle = point_direction(x, y, oCharacter.x, oCharacter.y - 16) + 180 * (facing == -1);
            if (y &gt; oCharacter.y - 26) yVel = -2;
            if (y &lt; oCharacter.y - 26) yVel = 2;
            if (y &gt; oCharacter.y - 30 &amp;&amp; y &lt; oCharacter.y - 20) {
                sfx_play(sndYumboDash);
                state = 4;
                alarm[2] = 60;
            }
            if (target == 0) state = 1;
        }
        if (state == 4) {
            image_angle = 0;
            xVel = 3 * facing;
            yVel = 0;
            if (isCollisionRight(4) || isCollisionLeft(4)) state = 1;
        }
        if (stun == 0) moveTo(xVel, yVel);
    } // if (active == 1)
    if (active == 0 &amp;&amp; state == 4) state = 1;
    if (state == 1) {
        sprite_index = sYumbo;
        image_speed = 0.5;
    }
    if (state == 2) {
        sprite_index = sYumboTurn;
        image_speed = 0.2;
    }
    if (state == 3) {
        sprite_index = sYumbo;
        image_speed = 0.5;
    }
    if (state == 4) {
        sprite_index = sYumbo;
        image_speed = 1;
    }
} // if (frozen == 0)
if (state == 100) enemy_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 2) state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
