<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGravitt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
setCollisionBounds(-4, -4, 4, 0);
myhealth = 40;
freezehp = 35;

damage = 18;
hitsound = sndEHit1;
deathsound = sndEDeath1;
platyoffset = -20;
frozenspr = sGravittFrozen;
flipx = 0;
yoffset = 0;
state = 1;
statetime = 0;
shell = instance_create(x, y, oGravittShell);
shell.damage = 18;
shell.active = 1;
active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (shell) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_region(x - 16, y - 16, 32, 32, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (active == 1 &amp;&amp; frozen == 0) {
    if (state == 1) {
        if (facing == 1) {
            if (isCollisionRight(2) || isCollisionEdgeRight(6)) facing = -1;
        } else if (facing == -1) {
            if (isCollisionLeft(2) || isCollisionEdgeLeft(6)) facing = 1;
        }
        image_speed = 0.2 * facing;
        hspeed = 0.5 * facing;
        if (statetime &gt; 60) {
            if (instance_exists(oMissile)) {
                if (distance_to_object(oMissile) &lt; 30) {
                    state = 2;
                    statetime = 0;
                }
            }
            if (instance_exists(oBeam)) {
                if (distance_to_object(oBeam) &lt; 30) {
                    state = 2;
                    statetime = 0;
                }
            }
        }
        if (statetime == timer) {
            state = 2;
            statetime = 0;
        }
    } // if (state == 1)
    if (state == 2) {
        if (statetime == 0) {
            hspeed = 0;
            image_index = 0;
            image_speed = 0;
            canbehit = 0;
        }
        if (statetime &gt; 0 &amp;&amp; statetime &lt; 300 &amp;&amp; yoffset &lt; 12) {
            yoffset += 2;
            y += 2;
        }
        if (statetime &gt; 300 &amp;&amp; yoffset &gt; 0) {
            yoffset -= 1;
            y -= 1;
        }
        if (statetime == 320) {
            state = 1;
            statetime = 0;
            canbehit = 1;
        }
    }
    if (stun) {
        speed = 0;
        image_speed = 0;
    }
} // if (active == 1 &amp;&amp; frozen == 0)
if (frozen) {
    speed = 0;
    image_speed = 0;
    shell.active = 0;
} else shell.active = 1;
shell.x = x;
shell.y = y;
if (state == 100) enemy_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
