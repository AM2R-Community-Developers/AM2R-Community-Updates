<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAutoad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
canbeX = 0;
makeActive();
setCollisionBounds(-10, -14, 14, 14);
myhealth = 80;
freezehp = 40;
damage = 16;
stuntime = 4;
hpush = 6;
vpush = -3;
hitmissileexpl = 0;
hitsound = sndRobotHit1;
deathsound = sndRobotExpl;
canfreeze = 1;
platyoffset = -6;
frozenspr = sAutoadFrozen;
flipx = 0;
target = 0;
state = 1;
alarm[0] = 1;
clawangle = 0;
clawx = -9;
clawy = -1;
fangy = 8;
hitemp = 1;
empspr = sAutoadDisabled;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 2 &amp;&amp; isCollisionBottom(1)) {
    if (oCharacter.y - 20 &gt; y) yVel = -3;
    if (oCharacter.y - 20 &lt; y) yVel = -5;
    if (oCharacter.x &gt; x) xVel = 2;
    if (oCharacter.x &lt; x) xVel = -2;
    clawangle = 36;
    sfx_play(sndAutoadJump);
}
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
enemy_active_check(70);
if (active == 1 &amp;&amp; stun == 0 &amp;&amp; frozen == 0 &amp;&amp; state != 100) {
    if (state == 1) state = 2;
    if (state == 2) {
        yVel += 0.25;
        if (clawangle &gt; 0) clawangle -= 2;
        if (isCollisionBottom(1) &amp;&amp; yVel &gt; 0) {
            xVel = 0;
            yVel = 0;
            clawangle = -30;
        }
    }
    if (stun == 0) moveTo(xVel, yVel);
}
if (state == 100) {
    enemy_death2();
    repeat (20) instance_create(x, y, oDebris);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (yVel != 0) {
    if (other.direction == 0 || other.direction == 45 || other.direction == 315) xVel += 1.8;
    if (other.direction == 180 || other.direction == 135 || other.direction == 225) xVel -= 1.8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBatteryExpl">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
emp.collisionBoundsOffsetBottomY = 4;
deb = instance_create(x - 12, y, oDebris);
deb.sprite_index = sAutoadClawDisabled;
deb.depth = -4;
deb = instance_create(x + 12, y, oDebris);
deb.sprite_index = sAutoadClawDisabled;
deb.depth = -4;
deb.image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
frz.sprite_index = sAutoadFangFrozen;
frz.spr0yoff = fangy;
frz.spr1 = sAutoadFrozen;
frz.spr2 = sAutoadClawFrozen;
frz.spr2xoff = -clawx;
frz.spr2yoff = clawy;
frz.spr2xs = -1;
frz.spr2a = 360 - clawangle;
frz.spr3 = sAutoadClawFrozen;
frz.spr3xoff = clawx;
frz.spr3yoff = clawy;
frz.spr3a = clawangle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
if (random(2) &lt; 0.2) instance_create(x, y, oDebris);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (frozen) {
    myspr = frozenspr;
} else myspr = sprite_index;
if (!flashing) {
    draw_sprite_ext(sAutoadFang, -1, x, y + fangy, image_xscale, 1, image_angle, -1, image_alpha);
    draw_sprite_ext(sAutoadClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, -1, image_alpha);
    draw_sprite_ext(sAutoadClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, -1, image_alpha);
    draw_sprite_ext(myspr, -1, x, y, image_xscale, 1, image_angle, -1, image_alpha);
} else if (flashing) {
    draw_sprite_ext(sAutoadFang, -1, x, y + fangy, image_xscale, 1, image_angle, make_color_rgb(80, 80, 80), image_alpha);
    draw_set_blend_mode(bm_add);
    repeat (3) draw_sprite_ext(sAutoadFang, -1, x, y + fangy, image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);
    
    draw_sprite_ext(sAutoadClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, make_color_rgb(80, 80, 80), image_alpha);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sAutoadClaw, -1, x - clawx, y + clawy, -1, 1, 360 - clawangle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);
    
    draw_sprite_ext(sAutoadClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, make_color_rgb(80, 80, 80), image_alpha);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sAutoadClaw, -1, x + clawx, y + clawy, 1, 1, clawangle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);
    
    draw_sprite_ext(myspr, -1, x, y, image_xscale, 1, image_angle, make_color_rgb(80, 80, 80), image_alpha);
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(myspr, -1, x, y, image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
