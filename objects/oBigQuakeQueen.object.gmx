<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ssEDFX</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-200</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.quake = 0;
intensity = 0;
statetime = 0;
sid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.ingame) {
    statetime += 1;
    if (statetime == 95) {
        sid = sfx_loop(sndQuakeLoop);
        audio_sound_gain(sid, 0.05, 0);
        audio_sound_gain(sid, global.opsoundvolume / 100, 1500);
        
    }
    if (statetime == 100) {
        global.quake = 1;
        intensity = 3;
    }
    if (statetime == 130) intensity = 5;
    if (statetime == 160) intensity = 7;
    if (statetime == 190) intensity = 9;
    if (statetime == 340) sfx_play(sndQueenIntro); //240
    if (statetime == 250) {
        intensity = 11;
        audio_sound_gain(sid, 0, 1500);
    }
    if (statetime == 500) intensity = 9;
    if (statetime == 540) intensity = 6;
    if (statetime == 580) intensity = 4;
    if (statetime == 595) intensity = 3;
    if (statetime == 615) intensity = 2;
    if (statetime == 630) intensity = 1;
    if (statetime == 645) { intensity = 0; event_user(0); }
    if (global.quake) {
        if (global.classicmode == 0) {
            view_xport[0] = round(random(intensity));
            view_yport[0] = round(random(intensity));
            oControl.xShake = round(random(intensity));
            oControl.yShake = round(random(intensity));
        }
        if (global.classicmode == 1) {
            view_xport[0] = 80 + round(random(intensity));
            view_yport[0] = 40 + round(random(intensity));
            oControl.xShake = 80 + round(random(intensity));
            oControl.yShake = 40 + round(random(intensity));
        }
    }
    if (global.opxjoyvib) {
        global.vibL = intensity * 0.15;
        global.vibR = intensity * 0.15;
    }
} else {
    view_xport[0] = 0;
    view_yport[0] = 0;
    oControl.xShake = 0;
    oControl.yShake = 0;
} // if (global.ingame) else
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.classicmode == 0) {
    view_xport[0] = 0;
    view_yport[0] = 0;
    oControl.xShake = 0;
    oControl.yShake = 0;
}
if (global.classicmode == 1) {
    view_xport[0] = 80;
    view_yport[0] = 40;
    oControl.xShake = 0;
    oControl.yShake = 0;
}
global.quake = 0;
//add_log(3);
sfx_stop(sndQueenIntro);
sfx_stop(sndQuakeLoop);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
