<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMotoRun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
makeActive();
setCollisionBounds(-10, -20, 10, 0);
myhealth = 90;
freezehp = 10;
damage = 25;
hitsound = sndEHit1;
deathsound = sndEDeath1;
platyoffset = -14;
frozenspr = sMotoFrozen;
state = 0;
facing = 1;
mymask = instance_create(x, y, oMotoMask);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(mymask)) with (mymask) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_active_check(30);
enemy_target_check(140, 0);
if (active == 1 &amp;&amp; frozen == 0) {
    yVel += 0.2;
    if (isCollisionBottom(1) == 1) yVel = 0;
    if (state == 0) {
        sprite_index = sMotoRun;
        image_speed = 0;
        image_index = 0;
        if (statetime &gt; 60) {
            state = 1;
            statetime = 0;
        }
    }
    if (state == 1) {
        xVel = 3 * facing;
        sprite_index = sMotoRun;
        image_speed = 0.5;
        if (statetime == 0) image_index = 0;
        if (statetime &gt; 60 &amp;&amp; (oCharacter.x &lt; x - 32 &amp;&amp; facing == 1 || oCharacter.x &gt; x + 32 &amp;&amp; facing == -1)) {
            state = 2;
            statetime = 0;
        }
        if (collision_line(x + 11 * facing, y - 16, x + 11 * facing, y - 8, oSolid, true, true) &gt; 0) {
            state = 2;
            statetime = 20;
            xVel = 0;
        }
        if (statetime &gt; 30 &amp;&amp; (facing == 1 &amp;&amp; collision_point(x + 32, y - 8, oMoto, true, true) || facing == -1 &amp;&amp; collision_point(x - 32, y - 8, oMoto, true, true))) {
            state = 2;
            statetime = 10;
        }
        if (collision_line(x + 12 * facing, y - 8, x + 12 * facing, y + 24, oSolid, true, true) == noone) {
            state = 2;
            statetime = 20;
            xVel *= 0.2;
        }
        if (isCollisionRight(1) &amp;&amp; facing == 1 || isCollisionLeft(1) &amp;&amp; facing == -1) {
            if (collision_line(x + 11 * facing, y - 20, x + 11 * facing, y - 4, oSolid, true, true) == noone) while (isCollisionBottom(1)) y -= 1;
        }
        if (collision_line(x + 16 * facing, y - 48, x + 16 * facing, y - 18, oSolid, true, true) == noone &amp;&amp; collision_line(x + 16 * facing, y - 16, x + 16 * facing, y - 8, oSolid, true, true) &gt; 0) {
            state = 3;
            statetime = 0;
        }
    } // if (state == 1)
    if (state == 2) {
        xVel *= 0.9;
        sprite_index = sMotoTurn;
        image_speed = 0;
        if (statetime &lt; 22) {
            image_index = 0;
        } else image_index = 1;
        if (statetime == 26) facing = -facing;
        if (statetime &gt; 30) {
            state = 1;
            statetime = -1;
        }
    }
    if (state == 3) {
        xVel = 3 * facing;
        if (statetime == 0) {
            yVel = -3;
            sprite_index = sMotoRun;
            image_speed = 0;
            image_index = 3;
        }
        if (statetime &gt; 2) {
            if (isCollisionBottom(1)) {
                state = 1;
                statetime = -1;
            }
        }
    }
    if (stun == 0) moveTo(xVel, yVel);
} // if (active == 1 &amp;&amp; frozen == 0)
event_inherited();
if (state == 100) {
    with (mymask) instance_destroy();
    enemy_death();
}
if (instance_exists(mymask)) {
    mymask.x = x + 4 * facing;
    mymask.y = y;
    mymask.image_xscale = facing;
    if (frozen &gt; 0) {
        mymask.canhit = 0;
    } else mymask.canhit = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
