<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ssEDFX</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>widescreen = oControl.widescreen;
widescreen_space = oControl.widescreen_space;

default_title = get_text("Subscreen", "Title_Logs");
global.curropt = 0;
i = 59;
repeat (60) {
    logobj[i] = 0;
    i -= 1;
}
active = 0;
rectoffset = 0;
expanded = 0;
targety = 0;
targetx = (view_wview[0] / 2) + (widescreen_space/2);
drawtarg = targetx;
x = targetx;
timer = 0;
view_object[0] = id;
alarm[0] = 5;
if (!expanded) {
    oSS_Fg.logtitle = default_title;
}
surf = surface_create(149 + widescreen_space, 137);
scroll = 0;
lines = 0;
currentline = 0;
logtext = "";
title = default_title;
load_logs_list();
i = 0;
j = 0;
lognum = 0;
create_log_label(cat[0]);
create_log_entry(0);
create_log_entry(1);
create_log_entry(3);
create_log_entry(4);
create_log_entry(5);
create_log_entry(6);
j += 1;
create_log_label(cat[1]);
create_log_entry(10);
create_log_entry(11);
create_log_entry(12);
create_log_entry(13);
create_log_entry(14);
create_log_entry(15);
create_log_entry(16);
j += 1;
create_log_label(cat[2]);
create_log_entry(20);
create_log_entry(21);
create_log_entry(22);
create_log_entry(23);
create_log_entry(24);
create_log_entry(25);
create_log_entry(26);
create_log_entry(27);
create_log_entry(28);
create_log_entry(40);
create_log_entry(29);
create_log_entry(44); // &lt;---------
j += 1;
create_log_label(cat[3]);
create_log_entry(30);
create_log_entry(32);
create_log_entry(33);
create_log_entry(34);
create_log_entry(35);
create_log_entry(36);
create_log_entry(37);
create_log_entry(38);
j += 1;
create_log_label(cat[4]); // &lt;---- NEWLOGSCODE
create_log_entry(41);
create_log_entry(42);
create_log_entry(43);
create_log_entry(45);
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
with (oLogEntry) instance_destroy();
with (oMenuLabel) instance_destroy();
view_xview[0] = 0;
view_yview[0] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = 1;
global.gotolog = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active) {
    if (oControl.kDown &amp;&amp; oControl.kDownPushedSteps == 0 || timer == 0 &amp;&amp; oControl.kDown &amp;&amp; oControl.kDownPushedSteps &gt; 20) {
        if (expanded == 0) {
            global.curropt += 1;
            if (global.curropt &gt; lognum - 1) global.curropt = 0;
            event_user(0);
            sfx_play(sndMenuMove);
        }
    }
    if (oControl.kUp &amp;&amp; oControl.kUpPushedSteps == 0 || timer == 0 &amp;&amp; oControl.kUp &amp;&amp; oControl.kUpPushedSteps &gt; 20) {
        if (expanded == 0) {
            global.curropt -= 1;
            if (global.curropt &lt; 0) global.curropt = lognum - 1;
            event_user(0);
            sfx_play(sndMenuMove);
        }
    }
    if (oControl.kDown &gt; 0 &amp;&amp; oControl.kDownPushedSteps == 0 || timer == 0 &amp;&amp; oControl.kDown &amp;&amp; oControl.kDownPushedSteps &gt; 20) {
        if (expanded &amp;&amp; scroll) {
            currentline += 1;
            if (currentline &gt; lines) currentline = lines;
            event_user(1);
            sfx_play(sndMenuMove);
        }
    }
    if (oControl.kUp &gt; 0 &amp;&amp; oControl.kUpPushedSteps == 0 || timer == 0 &amp;&amp; oControl.kUp &amp;&amp; oControl.kUpPushedSteps &gt; 20) {
        if (expanded &amp;&amp; scroll) {
            currentline -= 1;
            if (currentline &lt; 0) currentline = 0;
            event_user(1);
            sfx_play(sndMenuMove);
        }
    }
    if (oControl.kMenu1 &amp;&amp; oControl.kMenu1PushedSteps == 0) {
        expanded = !expanded;
        event_user(2);
    }
} // if (active)
if(os_type == os_android &amp;&amp; os_is_paused()) alarm[1] = 1;
if (!surface_exists(surf)) {
    surface_free(surf);
    surf = surface_create(149, 137);
    event_user(1);
}
targety = logobj[global.curropt].y + 8;
if (targety != y) y = lerp(y, targety, 0.2);
if (targetx != x) x = lerp(x, targetx, 0.2);
if (targetx - x &lt; 0.1 &amp;&amp; x - targetx &lt; 0.1) {
    x = targetx;
}
timer -= 1;
if (timer &lt; 0) timer = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (expanded) {
    event_user(0);
    targetx = (view_wview[0] / 2) + 150 + (3*(widescreen_space/2));
    oSS_Fg.logtitle = lbl[logobj[global.curropt].logid];
    if (global.newlog[logobj[global.curropt].logid]) global.newlog[logobj[global.curropt].logid] = 0;
} else {
    targetx = (view_wview[0] / 2) + (widescreen_space/2);
    oSS_Fg.logtitle = default_title;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(surf);
draw_set_font(fontMenuSmall2);
draw_set_color(c_white);
draw_set_alpha(1);
draw_clear(c_black);
draw_text_ext(2, -12 * currentline - 2, logtext, 12, 148 + widescreen_space);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>logtext = txt[logobj[global.curropt].logid, global.log[logobj[global.curropt].logid] - 1];
currentline = 0;
draw_set_font(fontMenuSmall2);
height = string_height_ext(logtext, 12, 148 + widescreen_space);
if (height &gt; 136) {
    scroll = 1;
    lines = floor((height - 134) / 12);
} else scroll = 0;
surface_set_target(surf);
draw_set_font(fontMenuSmall2);
draw_set_color(c_white);
draw_set_alpha(1);
draw_clear(c_black);
draw_text_ext(2, -2, logtext, 12, 148 + widescreen_space);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_background(pic[logobj[global.curropt].logid, global.log[logobj[global.curropt].logid] - 1], (view_wview[0] / 2) + 1 + (widescreen_space), (view_yview[0] + 52));
if (expanded || (!expanded &amp;&amp; (x &gt; (targetx + 1)))) {
    if (surface_exists(surf)) {
        //draw_set_alpha(min(max(, 0), 1));
        draw_set_alpha((x-drawtarg)/drawtarg);
        draw_surface(surf, (view_wview[0] / 2) + 150 + (widescreen_space), view_yview[0] + 52);
        draw_set_alpha(1);
    }
}
if (expanded) {
    if (scroll) {
        if (currentline &gt; 0) draw_sprite_ext(sLogScroll, 1, view_wview[0] / 2 + 294 + (2*(widescreen_space)), view_yview[0] + 56, 1, -1, 0, -1, 1);
        if (currentline &lt; lines) draw_sprite(sLogScroll, 1, view_wview[0] / 2 + 294 + (2*(widescreen_space)), view_yview[0] + 185);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
