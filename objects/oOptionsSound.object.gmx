<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mus_stop_muted();
global.curropt = 0;
lastitem = 3;
active = 0;
alarm[0] = 5;
alarm[2] = 60;
i = 0;
repeat (4) {
    global.canedit[i] = 1;
    i += 1;
}
timer = 0;
changedfx = 0;
event_user(0);
tip[0] = get_text("OptionsSound", "SoundVolume_Tip");
tip[1] = get_text("OptionsSound", "MusicVolume_Tip");
tip[2] = get_text("ExtrasMenu", "LowHealthAlarm_Tip");
tip[3] = get_text("GlobalOptions", "ExitMain_Tip");
global.tiptext = tip[global.curropt];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
event_user(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (oMusicV2.bossbgm == sndJump &amp;&amp; !sfx_isplaying(oMusicV2.currentbgm) &amp;&amp; oMusicV2.currentbgm != sndJump) mus_play(oMusicV2.currentbgm);
if (oMusicV2.bossbgm != sndJump &amp;&amp; !sfx_isplaying(oMusicV2.bossbgm)) mus_play(oMusicV2.bossbgm);
alarm[2] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sfx_play(sndFireBeam);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active) {
    if (oControl.kDown &gt; 0 &amp;&amp; (oControl.kDownPushedSteps == 0 || oControl.kDownPushedSteps &gt; 30 &amp;&amp; timer == 0)) {
        global.curropt += 1;
        if (global.curropt &gt; lastitem) global.curropt = 0;
        sfx_play(sndMenuMove);
        global.tiptext = tip[global.curropt];
    }
    if (oControl.kUp &gt; 0 &amp;&amp; (oControl.kUpPushedSteps == 0 || oControl.kUpPushedSteps &gt; 30 &amp;&amp; timer == 0)) {
        global.curropt -= 1;
        if (global.curropt &lt; 0) global.curropt = lastitem;
        sfx_play(sndMenuMove);
        global.tiptext = tip[global.curropt];
    }
    if ((oControl.kLeft &gt; 0 &amp;&amp; oControl.kLeftPushedSteps == 0 || oControl.kRight &gt; 0 &amp;&amp; oControl.kRightPushedSteps == 0) &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 2) {
            oControl.mod_lowhealthwarning = !oControl.mod_lowhealthwarning;
            sfx_play(sndMenuMove);
            event_user(2);
        }
    }
    if (oControl.kLeft &gt; 0 &amp;&amp; oControl.kLeftPushedSteps &gt; 5 &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 0 &amp;&amp; global.opsoundvolume &gt; 0) {
            global.opsoundvolume -= 1;
            alarm[1] = 30;
            event_user(2);
        }
        if (global.curropt == 1 &amp;&amp; global.opmusicvolume &gt; 0) {
            global.opmusicvolume -= 1;
            mus_current_update_volume();
            event_user(2);
        }
    }
    if (oControl.kRight &gt; 0 &amp;&amp; oControl.kRightPushedSteps &gt; 5 &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 0 &amp;&amp; global.opsoundvolume &lt; 100) {
            global.opsoundvolume += 1;
            alarm[1] = 30;
            event_user(2);
        }
        if (global.curropt == 1 &amp;&amp; global.opmusicvolume &lt; 100) {
            global.opmusicvolume += 1;
            mus_current_update_volume();
            event_user(2);
        }
    }
    if (oControl.kMenu1 &amp;&amp; oControl.kMenu1PushedSteps == 0) {
        if (global.curropt == 3) {
            save_gameoptions();
            instance_create(50, 92, oOptionsMain);
            instance_destroy();
            sfx_play(sndMenuSel);
        }
    }
} // if (active)
timer -= 1;
if (timer &lt; 0) timer = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>op[1].slwidth = global.opsoundvolume / 100 * op[1].w;
op[2].slwidth = global.opmusicvolume / 100 * op[1].w;
if (oControl.mod_lowhealthwarning) {
    op[3].optext = get_text("GlobalOptions", "Enabled");
} else op[3].optext = get_text("GlobalOptions", "Disabled");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (op[0]) instance_destroy();
with (op[1]) instance_destroy();
with (op[2]) instance_destroy();
with (op[3]) instance_destroy();
with (op[4]) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y -= 8;
op[0] = instance_create(x, y, oMenuLabel);
op[0].text = get_text("OptionsSound", "Title_Sound");
op[1] = instance_create(x, y + 16, oOptionSlider);
op[1].label = get_text("OptionsSound", "SoundVolume");
op[1].optionid = 0;
op[2] = instance_create(x, y + 32, oOptionSlider);
op[2].label = get_text("OptionsSound", "MusicVolume");
op[2].optionid = 1;
op[3] = instance_create(x, y + 48, oOptionLR);
op[3].label = get_text("ExtrasMenu", "LowHealthAlarm");
op[3].optionid = 2;
op[4] = instance_create(x, y + 64, oPauseOption);
op[4].optionid = 3;
op[4].label = get_text("GlobalOptions", "Exit");
event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
