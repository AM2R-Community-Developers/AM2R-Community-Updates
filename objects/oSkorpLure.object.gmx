<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSkorpLure</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1; // og 1
image_speed = 0.15;
sprite_index = skorp_get_lure(sSkorpLureR);
state = 0;
cooldown = 0;
glowing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = 1;
switch (floor(image_angle)) {
    case 270:
    case 90: {
        sprite_index = skorp_get_lure(sSkorpLureUpR);
        break;
    }
    default: {
        sprite_index = skorp_get_lure(sSkorpLureR);
        break;
    }
}
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (floor(image_angle)) {
    case 180: {
        image_yscale = -1;
        break;
    }
    case 270:
    case 90: {
        sprite_index = skorp_get_lure(sSkorpLureUpR);
        break;
    }
    default: {
        // do things
        break;
    }
}

for (var i = 0; i &lt; 32; i++) {
    if (collision_point(x, y, oSolid, false, false)) {
        x += lengthdir_x(1, image_angle);
        y += lengthdir_y(1, image_angle);
    } else {
        x -= lengthdir_x(1, image_angle);
        y -= lengthdir_y(1, image_angle);
        break;
    }
}
startx = x;
starty = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((sprite_index == skorp_get_lure(sSkorpLure)) || (sprite_index == skorp_get_lure(sSkorpLureUp))) {
    image_speed = 0.15;
    // Twitching
    if ((irandom(35) == 0) &amp;&amp; (cooldown &lt;= 0)) {
        glowing = 40;
        cooldown = 80;
    }
}

if (cooldown &gt; 0) {
    cooldown --;
}
if (glowing &gt; 0) {
    glowing --;
}

if (state == 100) {
    switch (floor(image_angle)) {
        case 270:
        case 90: {
            sprite_index = skorp_get_lure(sSkorpLureUpV);
            break;
        }
        default: {
            sprite_index = skorp_get_lure(sSkorpLureV);
            break;
        }
    }
    if (visible == 0) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((sprite_index == skorp_get_lure(sSkorpLureV)) || (sprite_index == skorp_get_lure(sSkorpLureUpV))) {
    visible = 0;
} else if (sprite_index == skorp_get_lure(sSkorpLureR)) {
    sprite_index = skorp_get_lure(sSkorpLure);
} else if (sprite_index == skorp_get_lure(sSkorpLureUpR)) {
    sprite_index = skorp_get_lure(sSkorpLureUp);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_blend_mode(bm_add);
repeat (2) {
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, -1, glowing/40);
}
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
