<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sIBeamFX</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerx = 350;
playertgtx = -50;
if (oControl.mod_fusion == 1) playertgtx = 5;
playery = 18;
glow1x = -33;
glow1y = 28;
glow2x = 29;
glow2y = 105;
glow3x = 17;
glow3y = 209;
glow4x = -50;
glow4y = 18;
glow_alpha = 0;
bgx = 0;
bgtgtx = -80;
bgy = 0;
tx1x = 250;
tx1y = 70;
tx2x = 307;
tx2y = 220;
tx1_alpha = 0;
tx2_alpha = 0;
i = 0;
ralpha = 0;
fadeout = 0;
walpha = 0;
text1 = get_text("ScoreScreen", "ClearTime");
text1a = steps_to_time2(global.gametime);
text2 = get_text("ScoreScreen", "ItemCollection");
text2a = string(round(global.itemstaken / 88 * 100)) + "%";
text3 = get_text("ScoreScreen", "SeeYouNextMission");
text4 = get_text("ScoreScreen", "TheLastMonster");
text5 = get_text("ScoreScreen", "ToBeContinued");
statetime = 0;
state = 0;

if (global.difficulty == 0) {
    ending = 276;
    unlock_gallery(0);
}
else {
    if (global.gametime &gt;= 864000) {
        ending = 276;
        unlock_gallery(0);
    }
    if (global.gametime &gt;= 432000 &amp;&amp; global.gametime &lt; 864000) {
        ending = 277;
        unlock_gallery(1);
        unlock_gallery(0);
    }
    if (global.gametime &lt; 432000) {
        ending = 278;
        unlock_gallery(2);
        unlock_gallery(1);
        unlock_gallery(0);
    }
}

if (global.difficulty == 0) unlock_set(0);
if (global.difficulty == 1) unlock_set(1);
if (global.difficulty &gt; 1) unlock_set(2);

widespace = oControl.widescreen*53;
//transitiontime = 1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var j;
if (state == 0) {
    if (playerx != playertgtx) playerx = lerp(playerx, playertgtx, 0.02);
    if (bgx != bgtgtx) bgx = lerp(bgx, bgtgtx, 0.02);
    glow1x = playerx + 17;
    glow2x = playerx + 79;
    glow3x = playerx + 67;
    glow4x = playerx;
    if (statetime &gt; 200) {
        if (tx1_alpha &lt; 1) tx1_alpha += 0.05;
    }
    if (statetime &gt; 300) {
        if (tx2_alpha &lt; 1) tx2_alpha += 0.05;
    }
    if (statetime &gt; 120 &amp;&amp; statetime &lt; 1000 &amp;&amp; (oControl.kMenu1 || oControl.kMenu2 || oControl.kStart)) { }
    if (statetime &gt; 1000) {
        if (walpha &lt; 1) {
            walpha += 0.01;
        } else {
            state = 1;
            statetime = 0;
            tx1_alpha = 0;
        }
    }
    i += 0.02;
    if (i &gt; 99999999) i = 0;
    j = 0.02 + abs(sin(i));
    if (j &gt; 1) j = 1;
    glow_alpha = j;
} // if (state == 0)
if (state == 1) {
    if (statetime &gt; 300 &amp;&amp; statetime &lt; 1000 &amp;&amp; (oControl.kMenu1 || oControl.kMenu2 || oControl.kStart)) statetime = 1000;
    if (statetime &gt; 180) {
        if (tx1_alpha &lt; 1) tx1_alpha += 0.05;
    }
    if (statetime &gt; 1000) {
        if (fadeout == 0) fadeout = 1;
    }
    if (statetime == 1300) {
        state = 2;
        statetime = 0;
        tx1_alpha = 0;
        tx2_alpha = 0;
        ralpha = 0;
        fadeout = 0;
    }
    if (fadeout) {
        if (ralpha &lt; 1) ralpha += 0.01;
    }
    if (walpha &gt; 0) walpha -= 0.01;
}
if (state == 2) {
    if (statetime &gt; 0) {
        if (tx1_alpha &lt; 1) tx1_alpha += 0.05;
    }
    if (statetime &gt; 350) {
        if (tx2_alpha &lt; 1) tx2_alpha += 0.05;
    }
    if (statetime == 60) sfx_play(sndTLM);
    if (statetime == 600) fadeout = 1;
    if (statetime == 900) event_user(0);
    if (fadeout) {
        if (ralpha &lt; 1) ralpha += 0.01;
    }
}
statetime += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//room_change(titleroom, 1); //room_goto(titleroom);

if(round((global.itemstaken / 88) * 100) &lt; 100) {
    room_change(titleroom, 1); //room_goto(titleroom);
} else {
    room_goto(rm_secretEnding);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0) {
    draw_background(bgScoreScreenBG, bgx - (oControl.widescreen_space/2), bgy);
    if (oControl.mod_fusion == 1) { 
        draw_background(bgScoreScreenPlayer_fusion, playerx, playery); 
        } else draw_background(bgScoreScreenPlayer, playerx, playery);
    draw_set_blend_mode(bm_add);
    if (oControl.mod_fusion == 1)
    {
        draw_background_ext(bgScoreScreenPlayerGlow4, glow4x, glow4y, 1, 1, 0, -1, glow_alpha);
    }
    else
    {
        draw_background_ext(bgScoreScreenPlayerGlow1, glow1x, glow1y, 1, 1, 0, -1, glow_alpha);
        draw_background_ext(bgScoreScreenPlayerGlow2, glow2x, glow2y, 1, 1, 0, -1, glow_alpha);
        draw_background_ext(bgScoreScreenPlayerGlow3, glow3x, glow3y, 1, 1, 0, -1, glow_alpha);
    }
    draw_set_blend_mode(bm_normal);
    draw_set_color(c_white);
    draw_set_font(fontGUI2);
    draw_set_halign(fa_center);
    draw_set_alpha(tx1_alpha);
    draw_text(tx1x, tx1y, text1);
    draw_text(tx1x, tx1y + 12, text1a);
    draw_set_alpha(tx2_alpha);
    draw_text(tx1x, tx1y + 40, text2);
    draw_text(tx1x, tx1y + 52, text2a);
    draw_set_halign(fa_left);
}
if (state == 1) {
    draw_background(ending, -53, 0); // -53 is a widescreen image correction
    draw_set_font(fontGUI2);
    draw_set_halign(fa_right);
    draw_set_color(c_black);
    draw_set_alpha(tx1_alpha);
    draw_text(tx2x - 1 + widespace, tx2y - 1, text3);
    draw_text(tx2x - 1 + widespace, tx2y + 1, text3);
    draw_text(tx2x + 1 + widespace, tx2y - 1, text3);
    draw_text(tx2x + 1 + widespace, tx2y + 1, text3);
    draw_text(tx2x - 1 + widespace, tx2y, text3);
    draw_text(tx2x + 1 + widespace, tx2y, text3);
    draw_set_color(c_white);
    draw_set_alpha(tx1_alpha);
    draw_text(tx2x + widespace, tx2y, text3);
    draw_set_halign(fa_left);
}
if (state == 2) {
    draw_set_font(fontGUI2);
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    draw_set_alpha(tx1_alpha);
    draw_text(160, 100, text4);
    draw_set_halign(fa_right);
    draw_set_font(fontMenuSmall2);
    draw_set_alpha(tx2_alpha);
    draw_text(307 + widespace, 220, text5);
    draw_set_halign(fa_left);
}
if (fadeout) {
    draw_set_alpha(ralpha);
    draw_set_color(c_black);
    draw_rectangle(-53, 0, 1000, 1000, false);
    draw_set_alpha(1);
}
if (walpha &gt; 0) {
    draw_set_alpha(walpha);
    draw_set_color(c_white);
    draw_rectangle(-53, 0, 1000, 1000, false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
